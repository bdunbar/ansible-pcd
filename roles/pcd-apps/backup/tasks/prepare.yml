---
##
# pcd-apps/backup prepare
#

- { include: "{{ pcd_task_add_user }}", task: {
      name: "{{ backup_user }}",
      home: "{{ backup_user_home }}",
      system: yes,
      groups: [
        "{{ os_mysql_group }}",
        "{{ os_apache_group }}",
        "{{ httpd_user_group }}"]
    }
  }

- { include: prepare-debian.yml, when: "ansible_os_family == 'Debian'" }


- name: ensure backup directories
  file:
    state=directory
    path={{ item }}
  with_items:
    - "{{ backup_target_dir }}"
    - "{{ backup_binaries }}"
    - "{{ backup_rsync_includes }}"
  sudo: True
  sudo_user: "{{ backup_user }}"
  
- name: ensure backup_rsync_sites_file
  command: touch {{ backup_rsync_sites_file }} 
    creates={{ backup_rsync_sites_file }}
  sudo: True
  sudo_user: "{{ backup_user }}"
  
    

- name: allow backup user to sudo execute scripts in binaries directory
  lineinfile: dest=/etc/sudoers regexp="^{{ backup_user }}" line="{{ backup_user }} ALL=(ALL) NOPASSWD:{{ backup_binaries }}/*" state=present
  
  
- name: ensure backup user has PATH set in .bashrc
  lineinfile:
    dest={{ backup_user_home }}/.bashrc
    state=present
    regexp='^PATH=.*$'
    line="PATH=$PATH:{{ backup_binaries }}"
  
 
# cloud backups  
###############

- name: add backup user to fuse group
  user: 
    append=yes
    groups=fuse
    name={{ backup_user }}
  when: backup_s3ql_enabled
  
- { include: "{{ pcd_task_add_s3ql_mount }}", task: {
      nickname: "backups",
      user: "{{ backup_user }}",
      target: "{{ backup_target_dir }}",
      url: "{{ backup_s3ql_url }}",
      login: "{{ backup_s3ql_username }}",
      password: "{{ backup_s3ql_password }}"
    }, when: backup_s3ql_enabled
  }
  

