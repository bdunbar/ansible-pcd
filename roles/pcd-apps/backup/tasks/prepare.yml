---
##
# pcd-apps/backup prepare
#

- { include: "{{ pcd_task_add_user }}", task: {
      name: "{{ BACKUP_USER }}",
      home: "{{ BACKUP_USER_HOME }}",
      system: yes,
      groups: [
        "{{ os_mysql_group }}",
        "{{ os_apache_group }}",
        "{{ HTTPD_USER_GROUP }}"]
    }
  }

- { include: prepare-debian.yml, when: "ansible_os_family == 'Debian'" }


- name: ensure backup directories
  file:
    state=directory
    path={{ item }}
  with_items:
    - "{{ backup_target_dir }}"
    - "{{ backup_binaries }}"
    - "{{ BACKUP_RSYNC_INCLUDES_DIR }}"
  sudo: True
  sudo_user: "{{ BACKUP_USER }}"
  
- name: ensure BACKUP_RSYNC_SITES_FILE
  command: touch {{ BACKUP_RSYNC_SITES_FILE }} 
    creates={{ BACKUP_RSYNC_SITES_FILE }}
  sudo: True
  sudo_user: "{{ BACKUP_USER }}"
  
    

- name: allow backup user to sudo execute scripts in binaries directory
  lineinfile: dest=/etc/sudoers regexp="^{{ BACKUP_USER }}" line="{{ BACKUP_USER }} ALL=(ALL) NOPASSWD:{{ backup_binaries }}/*" state=present
  
  
- name: ensure backup user has PATH set in .bashrc
  lineinfile:
    dest={{ BACKUP_USER_HOME }}/.bashrc
    state=present
    regexp='^PATH=.*$'
    line="PATH=$PATH:{{ backup_binaries }}"
  
 
# cloud backups  
###############

- name: add backup user to fuse group
  user: 
    append=yes
    groups=fuse
    name={{ BACKUP_USER }}
  when: backup_s3ql_enabled
  
- { include: "{{ pcd_task_add_s3ql_mount }}", task: {
      nickname: "backups",
      user: "{{ BACKUP_USER }}",
      target: "{{ backup_target_dir }}",
      url: "{{ backup_s3ql_url }}",
      login: "{{ backup_s3ql_username }}",
      password: "{{ backup_s3ql_password }}"
    }, when: backup_s3ql_enabled
  }
  

