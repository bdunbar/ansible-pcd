---
#
# creates a s3ql filesystem and mounts immediately and automatically on boot.
#

# usage:
# 
#- { include: "{{ pcd_task_add_s3ql_mount }}", task: {
#      nickname: "backups",
#      user: "backupmonsieur",
#      target: "/mnt/cloud-storage",
#      url: "gs://bucket/prefix",
#      login: "google-storage-key",
#      password: "google-storage-key-secret" 
#    }
#  }


- fail: msg="s3ql role recommends using system_uuid as the prefix, but it's missing"
  when: not system_uuid or system_uuid.strip() == ''
  
- name: detect user's home directory
  command: "echo ~{{ task.user | default('root') }}"
  register: detected_user_home
  changed_when: False
  
- name: register mountpoint in authfile
  ini_file:
    dest={{ detected_user_home.stdout }}/.s3ql-authinfo
    section={{ task.nickname }}
    option={{ item.option }}
    value={{ item.value }}
    owner={{ task.user }}
    mode=0600
  with_items:
    - { option: 'storage-url', value: '{{ task.url }}' }
    - { option: 'backend-login', value: '{{ task.login }}' }
    - { option: 'backend-password', value: '{{ task.password }}' }


- name: create s3ql filesystem if it doesn't exist
  shell: mkfs.s3ql --authfile {{ detected_user_home.stdout }}/.s3ql-authinfo --plain -L {{ task.nickname }} {{ task.url }}
    creates={{ detected_user_home.stdout }}/.s3ql/{{ backup_s3ql_url | replace("/","=2F") }}.db
  sudo: True,
  sudo_user: "{{ task.user | default('root') }}"
  ignore_errors: yes

- name: copy sysvinit script to mount on boot
  template:
     dest="/etc/init.d/s3ql-{{ task.nickname }}"
     src="{{ PCD_SERVICE_ROLES }}/s3ql/templates/sysvinit.j2"
     mode=0755
  when: "ansible_distribution == 'Debian'"
  
- name: register sysvinit script as a service (daemon)
  shell: insserv s3ql-{{ task.nickname }}
    creates="/etc/rc0.d/K01s3ql-{{ task.nickname }}"
  when: "ansible_distribution == 'Debian'"
 
- name: automount on boot
  service: name="s3ql-{{ task.nickname }}" state=started enabled=yes
  