---
##
#  pcd-sites/site configure
#

- name: SSL - copy key
  copy: dest={{ HTTPD_SSL_DIR }}/{{ SITE_SSL_KEY | basename }} src={{ SITE_SSL_KEY }}
  when: SITE_HTTPS

- name: SSL - copy crt
  copy: dest={{ HTTPD_SSL_DIR }}/{{ SITE_SSL_CRT | basename }} src={{ SITE_SSL_CRT }}
  when: SITE_HTTPS
  

# awstats
#########

- name: detect custom awstats template
  local_action: stat 
    path={{ PCD_SITE_DEFINITIONS }}/{{ site_org }}/{{ site_name }}-awstats.j2
  register: pcd_stat
  when: SITE_ENABLE_AWSTATS
  
# use custom awstats template  
- { include: "{{ pcd_task_add_awstats_config }}", task: {
      site_name: "{{ site_name }}",
      site_aliases: "{{ SITE_ALIASES }}",
      log_file: "{{ SITE_LOG_FILE }}",
      config_template: "{{ PCD_SITE_DEFINITIONS }}/{{ site_org }}/{{ site_name }}-awstats.j2",
    }, when: SITE_ENABLE_AWSTATS and pcd_stat.stat.exists
  }

# else use default awstats template
- { include: "{{ pcd_task_add_awstats_config }}", task: {
      site_name: "{{ site_name }}",
      site_aliases: "{{ SITE_ALIASES }}",
      log_file: "{{ SITE_LOG_FILE }}",
    }, when: SITE_ENABLE_AWSTATS and not pcd_stat.stat.exists
  }
  
  
# backups
#########

- name: register backup file list
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/backup_list_{{ SITE_TYPE }}.yml"
    - "../vars/backup_list_default.yml"
  when: SITE_ENABLE_BACKUP and not SITE_BACKUP_FILE_LIST


- name: add  backup file list to BACKUP_RSYNC_SITES_FILE  
  lineinfile:
    dest={{ BACKUP_RSYNC_SITES_FILE }}
    state=present
    regexp=^{{ SITE_PATH }}/{{ SITE_DOCROOT }}/{{ item }}$
    line={{ SITE_PATH }}/{{ SITE_DOCROOT }}/{{ item }}
  with_items: SITE_BACKUP_FILE_LIST
  when: SITE_ENABLE_BACKUP
    
- name: exclude site from BACKUP_RSYNC_SITES_FILE  
  lineinfile:
    dest={{ BACKUP_RSYNC_SITES_FILE }}
    state=absent
    regexp=^{{ SITE_PATH }}/{{ SITE_DOCROOT }}/
  when: not SITE_ENABLE_BACKUP




